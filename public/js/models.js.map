{"version":3,"sources":["userModel.js","projectModel.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"models.js","sourcesContent":["myApp.factory('userModel',['$http','$window',function($http, $window){\n    var userModel = {};\n\n    userModel.doLogin = function(data){\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'auth',\n            method: \"POST\",\n            data: {\n                email: data.email,\n                password: data.password\n            }\n        }).success(function(response){\n            $window.sessionStorage[\"auth\"] = JSON.stringify(response);\n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Login Error');\n        });\n    };\n\n    userModel.getAuthStatus = function(){\n        var status = $window.sessionStorage[\"auth\"];\n        if(status){\n            console.log('status yes ' + status);\n            return true;\n        } else {\n            console.log('status no ' + status);\n            return false;\n        }\n    };\n\n    userModel.getUserObject = function() {\n        var userObj = angular.fromJson($window.sessionStorage[\"auth\"]);\n        if(userObj != null)\n            return userObj;\n        return null;\n    }\n\n    userModel.doUserLogout = function(){\n        delete $window.sessionStorage[\"auth\"];\n    };\n\n    userModel.registerUser = function(data){\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'user',\n            method: \"POST\",\n            data: {\n                name: data.name,\n                email: data.email,\n                password: data.password\n            }\n        }).success(function(response){\n            userModel.doLogin(data);\n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Register Error');\n        });\n    };\n\n\n    return userModel\n}]);","myApp.factory('projectModel',['$http', function($http){\n    var projectModel = {};\n\n    projectModel.projects =  [];\n\n    projectModel.loadText = function(id){\n        var index = projectModel.findProjectIndex(id);\n        projectModel.resetAllActive();\n        projectModel.projects[index].isActive = true;\n        return projectModel.projects[index].text;\n    };\n    projectModel.getName = function(id){\n        var index = projectModel.findProjectIndex(id);\n        return projectModel.projects[index].name;\n    };\n    projectModel.getComment = function(id){\n        var index = projectModel.findProjectIndex(id);\n        return projectModel.projects[index].comment;\n    };\n\n    projectModel.resetAllActive = function(){\n      for( var i=0; i< projectModel.projects.length; i++){\n          projectModel.projects[i].isActive = false;\n      }\n    };\n\n    projectModel.getProjectActive = function(){\n        for( var i=0; i< projectModel.projects.length; i++){\n            if( projectModel.projects[i].isActive )\n                return projectModel.projects[i];\n        }\n        return null;\n    };\n\n\n    projectModel.removeProject = function(id){\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'project/' + id,\n            method: \"DELETE\",\n        }).success(function(response){\n            var projectsObj = angular.fromJson(JSON.stringify(response));\n            projectModel.getProjects();\n            projectModel.removeFromGUI(id);\n            \n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Project Remove  Error');\n        });\n\n    };\n    \n    projectModel.removeFromGUI = function(id){\n        var index = projectModel.findProjectIndex(id);\n        if(index != null){\n            projectModel.projects.splice(index,1);\n        }\n    };\n\n    projectModel.findProjectIndex = function(id){\n        for (var i=0; i < projectModel.projects.length; i++ ){\n            if (projectModel.projects[i].id === id) {\n                return i;\n            }\n        }\n        return null;\n    };\n\n    projectModel.getProjects = function(){\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'project',\n            method: \"GET\"\n        }).success(function(response){\n\n            var projectsObj = angular.fromJson(JSON.stringify(response));\n\n            for (var i=0; i < projectsObj.length; i++){\n\n                projectModel.projects[i] =\n                {\n                    isActive: false,\n                    id: projectsObj[i].id,\n                    name: projectsObj[i].name,\n                    comment: projectsObj[i].comment,\n                    date: projectsObj[i].updated_at,\n                    text: projectsObj[i].body\n                }\n            }\n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Projects Load Error');\n        });\n        \n    };\n\n    projectModel.saveProjects = function(obj){\n\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'project',\n            method: \"POST\",\n            data: {\n                name: obj.name,\n                comment: obj.comment,\n                body: obj.body,\n                owner_id: obj.owner_id\n            }\n        }).success(function(response){\n            var projectsObj = angular.fromJson(JSON.stringify(response));\n            projectModel.getProjects();\n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Project Save Error');\n        });\n\n    };\n\n\n    projectModel.updateProjects = function(obj){\n        return $http({\n            headers: {\n                'Content-Type':'application/json'\n            },\n            url: baseUrl + 'project/' + obj.id,\n            method: \"PUT\",\n            data: {\n                id: obj.id,\n                name: obj.name,\n                comment: obj.comment,\n                body: obj.body,\n                owner_id: obj.owner_id\n            }\n        }).success(function(response){\n            var projectsObj = angular.fromJson(JSON.stringify(response));\n            projectModel.getProjects();\n\n        }).error(function(data, status, headers){\n            console.log(data, status, headers);\n            alert('Project Update Error');\n        });\n\n    };\n\n    return projectModel\n}]);"],"sourceRoot":"/source/"}